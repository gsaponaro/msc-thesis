# Generated by "yarp cmake", modified by Giovanni Saponaro

# A cmake file to get started with for new YARP projects.
# It assumes you want to build an executable from source code in 
# the current directory.
# Replace "yarpy" with whatever your executable should be called.
# There's some stuff to make compiling devices easier too.
SET(KEYWORD "reconstruction")

# Start a project.
PROJECT(${KEYWORD})

# Find YARP.  Point the YARP_BUILD environment variable at your build.
SET(YARP_DIR "$ENV{YARP_BUILD}" CACHE LOCATION "where is yarp?")
FIND_PACKAGE(YARP)

FIND_PACKAGE(OPENCV)

# Search for source code.
FILE(GLOB folder_source *.cpp *.cc *.c)
FILE(GLOB folder_header *.h)
SOURCE_GROUP("Source Files" FILES ${folder_source})
SOURCE_GROUP("Header Files" FILES ${folder_header})

# Check if there are any plugin device subdirectories.
# Device subdirectories contain a yarpdevice.cmake file.
FILE(GLOB_RECURSE device_config yarpdevice.cmake)
IF (device_config)
  INCLUDE(YarpCompileModules)
ENDIF (device_config)

# If no devices around, make a single executable
IF (NOT device_config)
  # Automatically add include directories if needed.
  FOREACH(header_file ${folder_header})
    GET_FILENAME_COMPONENT(p ${header_file} PATH)
    INCLUDE_DIRECTORIES(${p})
  ENDFOREACH(header_file ${folder_header})

  # Set up our main executable.
  IF (folder_source)
    ADD_EXECUTABLE(${KEYWORD} ${folder_source} ${folder_header})
  ELSE (folder_source)
    MESSAGE(FATAL_ERROR "No source code files found. Please add something")
  ENDIF (folder_source)
ENDIF (NOT device_config)



INCLUDE_DIRECTORIES(${OPENCV_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
LINK_LIBRARIES(${OPENCV_LIBRARIES})


ADD_EXECUTABLE(${KEYWORD} ${folder_source} ${folder_header})

